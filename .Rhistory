setCRISPRInfo(genus = "Clostridioides", species = "difficile", strain = "630", crisprSystemNumber = 1)
library(Spacer2PAM)
setCRISPRInfo(genus = "Clostridioides", species = "difficile", strain = "630", crisprSystemNumber = 1)
#Load a CSV file containing CRISPR system spacers as a data frame.
spacerDF = read.csv(file = file.choose(), header = TRUE)
#Generate a properly formatted data frame from the alignment CSV file.
alignmentDF = alignmentCSV2DF(alignmentFile = file.choose())
#Join the data frames containing the spacer data and alignment data.
#This step requires the preparation of the taxonimizr package. Details can be found at https://cran.r-project.org/web/packages/taxonomizr/vignettes/usage.html.
#Depending on the size of each data frame and the diversity of alignment hits, this step may take some time to complete.
joinSpacerDFandAlignmentDF(alignmentDF = alignmentDF, spacerDF = spacerDF, accessionDatabaseLocation = file.choose())
#Join the data frames containing the spacer data and alignment data.
#This step requires the preparation of the taxonimizr package. Details can be found at https://cran.r-project.org/web/packages/taxonomizr/vignettes/usage.html.
#Depending on the size of each data frame and the diversity of alignment hits, this step may take some time to complete.
joinSpacerDFandAlignmentDF(alignmentDF = alignmentDF, spacerDF = spacerDF, accessionDatabaseLocation = file.choose())
rlang::last_error()
#Join the data frames containing the spacer data and alignment data.
#This step requires the preparation of the taxonimizr package. Details can be found at https://cran.r-project.org/web/packages/taxonomizr/vignettes/usage.html.
#Depending on the size of each data frame and the diversity of alignment hits, this step may take some time to complete.
joinSpacerDFandAlignmentDF(alignmentDF = alignmentDF, spacerDF = spacerDF, accessionDatabaseLocation = file.choose())
rlang::last_error()
rlang::last_trace()
#Join the data frames containing the spacer data and alignment data.
#This step requires the preparation of the taxonimizr package. Details can be found at https://cran.r-project.org/web/packages/taxonomizr/vignettes/usage.html.
#Depending on the size of each data frame and the diversity of alignment hits, this step may take some time to complete.
joinSpacerDFandAlignmentDF(alignmentDF = alignmentDF, spacerDF = spacerDF, accessionDatabaseLocation = file.choose())
setwd("/Volumes/JEWETTLAB/Personal Data/GAR/Clostridia CRISPR Sequences/PAM Prediction/DJ316 PAM Prediction")
joinSpacerDFandAlignmentDF(alignmentDF = alignmentDF, spacerDF = spacerDF, accessionDatabaseLocation = file.choose())
rlang::last_error()
rlang::last_trace()
joinSpacerDFandAlignmentDF(alignmentDF = alignmentDF, spacerDF = spacerDF, accessionDatabaseLocation = "accessionTaxa.sql")
setwd("/Volumes/JEWETTLAB/Personal Data/GAR/Clostridia CRISPR Sequences/PAM Prediction/DJ316 PAM Prediction")
joinSpacerDFandAlignmentDF(alignmentDF = alignmentDF, spacerDF = spacerDF, accessionDatabaseLocation = "accessionTaxa.sql")
setwd("/Volumes/JEWETTLAB/Personal Data/GAR/Clostridia CRISPR Sequences/PAM Prediction/DJ316 PAM Prediction")
joinSpacerDFandAlignmentDF(alignmentDF = alignmentDF, spacerDF = spacerDF, accessionDatabaseLocation = "accessionTaxa.sql")
joinSpacerDFandAlignmentDF(alignmentDF = alignmentDF, spacerDF = spacerDF, accessionDatabaseLocation = file.choose())
setwd("/Volumes/JEWETTLAB/Personal Data/GAR/Clostridia CRISPR Sequences/PAM Prediction/DJ316 PAM Prediction")
joinSpacerDFandAlignmentDF(alignmentDF = alignmentDF, spacerDF = spacerDF, accessionDatabaseLocation = "accessionTaxa.sql")
setwd("~/Desktop/Spacer2PAM")
library(roxygen2)
library(devtools)
